@startuml
'https://plantuml.com/sequence-diagram
title Vacuum Cleaner
class Main{
		-gameState
		+startGame-void()
		+victory-boolean()
		+defeat-boolean()
		+endGame-void()
}
interface Entity{
       -x:int
       -y:int
       -skin-String
       +randomMovement-void()
       +collision-void()
}
class VacuumCleaner extends MovingEntity {
		-x:int
		-y:int
		-skin-String
		-vacuumedDirt-int
		-bag-int
		-battery-int
		+randomMovement-void()
		+directedMovement-void()
		+vacuum-int()
		+perceive()
		+checkBag-int
		+emptyBag-void()
}
class Cat extends MovingEntity{
		-x:int
		-y:int
		-skin - String
		-spawned - Boolean
		+spawn-void()
		+randomMovement-void()
		+collision-void()
        +makeDirt-void()
}
class Controller  {
		-moveUp-int
        -moveDown-int
        -moveLeft-int
        -moveRight-int
        -moveUpRight-int
        -moveUpLeft-int
        -moveDownRight-int
        -moveDownLeft-int
        -switchmovement-string
		-checkmovement-boolean
		+detectnobattery-void()
        +detectallclean-void()
        +getDirection-void()
		+changemovement-void()
}
class MovingEntity extends Entity{
	    -getPickedMovement
	    -setPickedMovement
}

class Board{
	    -Tiles[] matrix
        +board-void()
        +get ArrayList<Tiles>
        +print Arraylist<Tiles>
}
interface Cleanable extends Board{
		-vacuum-Boolean
		-cat-Boolean
		-wall-Boolean
		-dirtyZone-Boolean
		-furniture-Boolean
}




Controller -- Main

@enduml