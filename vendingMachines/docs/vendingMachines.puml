@startuml

class Product {
  - name: String
  - price: double
  - cantidad: int[3]
  + Product(name: String, price: double, cantidad1: int, cantidad2: int, cantidad3: int)
  + getName(): String
  + setName(name: String): void
  + getPrice(): double
  + setPrice(price: double): void
  + getCantidad(i: int): int
  + setCantidad(i: int, cantidad: int): void
  + sell(i: int): void
}

class Money {
  - valor: ArrayList<Float>
  - cantidad: ArrayList<Integer>
  + Money()
  + add(valor: float, cantidad: int): void
  + getCantidad(valor: float): int
  + setCantidad(valor: float, cantidad: int): void
}

interface Salable {
  + isSalable(): boolean
  + replanish(newQuantity: int): void
}

class Management {
  - products: ArrayList<Product>
  - money: ArrayList<Money>
  + Management()
  + pantalla(machine: int): void
  + paymentGestion(machine: int, product: int, money: float): void
}

class Accesories {
  + Accesories(name: String, price: double, id: int)
}

class Alert {
  // Empty class
}

class Drinks {
  - isAlcoholic: boolean
  - milliliters: int
  + Drinks(name: String, price: double, id: int, isAlcoholic: boolean, milliliters: int)
  + isSalable(): boolean
  + replanish(newQuantity: int): void
}

class Failure {
  // Empty class
}

class Food {
  + Food(name: String, price: double, id: int)
}

class Gluten {
  // Empty class
}

class Jam {
  // Empty class
}

class Machine {
  - amount: int
}

class Main {
  + main(args: String[]): void
}

class WithoutGluten {
  // Empty class
}

Product --> Salable
Product --> Money
Management --> Product
Management --> Money

@enduml